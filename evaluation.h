#pragma once

#include "utility.h"
#include "board.h"

struct Evaluation : Noncopyable
{
	int mg_bonus[2];
	int eg_bonus[2];
	uint64_t ring[2];
	uint64_t zone[2];
	int ring_pressure[2];
	int zone_pressure[2];
	int ring_attackers[2];
	int zone_attackers[2];

	uint64_t attacked_by_pawn[2];

	int mg_piece_value[6] = { 50, 306, 319, 406, 916, 0, };
	int eg_piece_value[6] = { 76, 325, 336, 594, 1109, 0, };
	
	int mg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		42, 47, 32, 56, 33, 30, -11, -25,
		9, 3, 23, 29, 34, 71, 60, 22,
		-6, -1, 10, 12, 32, 37, 13, 17,
		-8, -7, 10, 21, 24, 27, 10, 5,
		-15, -9, 1, 7, 16, 8, 11, 3,
		-6, -3, 4, -1, 10, 25, 25, -5,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int mg_knight_psqt[64] = {
		-98, -60, -45, -19, -5, -45, -49, -65,
		-9, 2, 24, 32, 9, 56, 1, 16,
		-4, 25, 31, 32, 57, 63, 32, 9,
		7, 6, 22, 46, 22, 40, 8, 29,
		-4, -1, 5, 12, 15, 14, 18, 5,
		-23, -14, -12, -12, 4, -10, 4, -10,
		-25, -20, -16, -2, -6, -1, -3, -4,
		-50, -17, -33, -20, -12, -8, -15, -27,
	};
	int mg_bishop_psqt[64] = {
		-21, -45, -46, -71, -62, -72, -27, -44,
		-17, -3, -17, -25, -5, -18, -29, -43,
		-9, 5, 4, 6, -1, 27, 5, -4,
		-18, 0, 0, 18, 6, 0, 1, -26,
		-3, -18, -9, 11, 5, -8, -15, 9,
		-4, 6, -1, 0, 3, 2, 4, 14,
		16, 3, 12, -7, 0, 13, 26, 14,
		3, 12, -1, -13, -2, -5, 12, 28,
	};
	int mg_rook_psqt[64] = {
		12, 5, 3, -5, 15, 23, 30, 46,
		-4, -6, 9, 25, 9, 29, 32, 53,
		-13, 13, 7, 6, 30, 30, 68, 37,
		-19, -4, -6, -5, -4, 3, 9, 8,
		-30, -32, -25, -20, -19, -31, -7, -19,
		-30, -24, -20, -20, -10, -11, 15, -6,
		-28, -21, -11, -10, -4, -1, 15, -19,
		-12, -13, -13, -6, 1, -1, 0, -6,
	};
	int mg_queen_psqt[64] = {
		-23, -19, -11, 8, -1, 12, 32, 6,
		0, -28, -27, -40, -39, -11, -6, 42,
		3, -7, -5, -14, -3, 20, 26, 19,
		-10, -4, -15, -23, -18, -14, -2, -4,
		0, -15, -13, -9, -15, -17, -3, 3,
		-3, 3, -6, -9, -4, -2, 11, 8,
		3, 3, 11, 11, 11, 15, 22, 19,
		2, -7, -2, 10, 5, -4, 1, 7,
	};
	int mg_king_psqt[64] = {
		-33, -2, 5, -24, -3, 9, 14, 3,
		-38, 13, 1, 43, 26, 33, 40, 7,
		-51, 39, 2, -5, 20, 63, 39, -8,
		-38, -17, -19, -59, -55, -24, -35, -87,
		-50, -20, -34, -72, -65, -34, -54, -115,
		-31, 19, -21, -40, -27, -35, -10, -63,
		26, 11, 10, -15, -19, -6, 19, 6,
		16, 32, 22, -49, 8, -36, 20, 28,
	};
	int eg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		115, 106, 110, 85, 87, 93, 110, 119,
		55, 59, 53, 60, 53, 47, 71, 61,
		35, 27, 24, 15, 15, 16, 22, 17,
		21, 21, 17, 15, 14, 12, 11, 8,
		17, 13, 17, 23, 21, 17, 5, 4,
		20, 19, 22, 30, 34, 22, 7, 6,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_knight_psqt[64] = {
		-47, -25, -5, -12, -3, -29, -19, -51,
		-5, -1, -3, -1, -5, -17, -3, -15,
		-5, -3, 11, 13, 4, -4, -8, -9,
		6, 10, 21, 23, 23, 21, 15, 1,
		10, 5, 22, 22, 26, 15, 7, 9,
		-6, 0, 7, 18, 17, 1, -2, 1,
		-3, 1, -2, -1, -3, -5, -5, 12,
		2, -8, -8, -5, -2, -9, 0, 2,
	};
	int eg_bishop_psqt[64] = {
		2, 4, 0, 5, 1, -4, -2, -11,
		-7, -4, -1, -1, -9, -5, 1, -2,
		9, -1, 4, -4, -1, 5, 1, 9,
		4, 8, 5, 17, 10, 9, 3, 6,
		0, 10, 14, 13, 12, 8, 7, -10,
		1, 6, 9, 13, 16, 8, 0, -1,
		8, -6, -7, 2, 6, -3, -1, -5,
		-6, 6, -1, -1, -4, 10, -7, -21,
	};
	int eg_rook_psqt[64] = {
		16, 19, 26, 22, 17, 16, 16, 13,
		15, 23, 26, 17, 18, 14, 11, 3,
		14, 14, 15, 13, 6, 2, 1, -3,
		17, 14, 19, 15, 6, 3, 6, 0,
		12, 13, 12, 10, 8, 9, 3, 1,
		4, 2, 0, 1, -3, -7, -17, -15,
		-3, -1, -2, -4, -10, -13, -21, -14,
		2, -3, 3, -2, -8, -4, -9, -9,
	};
	int eg_queen_psqt[64] = {
		-2, 7, 27, 26, 26, 23, 2, 11,
		-12, 8, 32, 50, 61, 37, 25, 30,
		-5, 3, 26, 40, 48, 40, 19, 28,
		4, 9, 18, 39, 47, 44, 45, 35,
		-4, 12, 14, 26, 34, 31, 28, 24,
		-19, -8, 5, 8, 14, 10, -1, -2,
		-19, -24, -27, -16, -13, -34, -46, -42,
		-26, -23, -23, -25, -25, -30, -30, -31,
	};
	int eg_king_psqt[64] = {
		-98, -39, -26, -4, -12, -4, 1, -85,
		-20, 20, 24, 26, 37, 45, 42, 5,
		-9, 28, 39, 45, 50, 50, 47, 5,
		-18, 23, 37, 47, 47, 43, 36, -3,
		-28, 11, 28, 42, 41, 28, 18, -12,
		-34, 0, 16, 27, 26, 18, 4, -19,
		-37, -5, 4, 12, 16, 8, -5, -30,
		-96, -48, -33, -21, -34, -21, -42, -102,
	};
	
	int ring_attack_potency[6] = { 0, 30, 65, 36, 111, 0, };
	int zone_attack_potency[6] = { 0, -9, 3, 86, 54, 0, };
	
	int ring_pressure_weight[8] = { 0, 12, 26, 40, 54, 52, 20, 0, };
	int zone_pressure_weight[8] = { 0, -6, 0, 5, 9, 10, 11, 5, };
	int mg_pawn_shield[6] = { 0, 33, 39, 27, 30, 12, };
	
	int mg_knight_mobility[9] = { -109, -46, -24, -14, -3, -1, 10, 20, 33, };
	int eg_knight_mobility[9] = { -81, -50, -20, 0, 9, 18, 20, 21, 19, };
	
	int mg_bishop_mobility[14] = { -54, -57, -26, -18, -6, 1, 7, 13, 16, 20, 23, 37, 36, 47, };
	int eg_bishop_mobility[14] = { -94, -72, -32, -11, -2, 4, 12, 16, 21, 22, 23, 17, 19, 9, };
	
	int mg_rook_mobility[15] = { -17, -54, -22, -16, -10, -10, -7, -12, -8, -4, 1, 2, 6, 16, 20, };
	int eg_rook_mobility[15] = { -25, -59, -39, -23, -17, -1, 5, 12, 11, 15, 18, 21, 25, 23, 23, };
	
	int mg_queen_mobility[28] = { 0, 0, -15, -66, -58, -23, -12, -9, -7, -6, -3, 0, 2, 5, 5, 5, 4, 0, 1, 0, 6, 15, 31, 37, 38, 60, 32, 19, };
	int eg_queen_mobility[28] = { 0, 0, -6, -61, -66, -63, -66, -53, -37, -15, -8, -1, 7, 9, 13, 22, 25, 35, 40, 44, 49, 41, 41, 39, 46, 48, 37, 28, };
	
	int mg_king_mobility[9] = { 0, 13, -9, 12, -7, 21, -42, -22, -4, };
	int eg_king_mobility[9] = { 7, 117, 56, 24, 20, -10, 4, -3, -20, };
	
	int mg_isolated_penalty = -15;
	int eg_isolated_penalty = -13;
	
	int mg_doubled_penalty = -7;
	int eg_doubled_penalty = -13;
	
	int mg_backward_penalty = -13;
	int eg_backward_penalty = -15;
	
	int mg_chained_bonus = 9;
	int eg_chained_bonus = 9;
	
	int mg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		42, 47, 32, 56, 33, 30, -11, -25,
		38, 45, 33, 23, 17, 14, -16, -42,
		32, 22, 23, 20, 6, 8, -4, -4,
		11, 4, -19, -7, -16, -11, -8, 1,
		7, -9, -21, -17, -14, -10, -8, 21,
		1, -1, -13, -8, 10, 0, 15, 14,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		115, 106, 110, 85, 87, 93, 110, 119,
		135, 132, 98, 61, 67, 87, 98, 123,
		84, 82, 57, 47, 45, 56, 78, 83,
		52, 48, 36, 26, 29, 36, 55, 50,
		17, 26, 19, 9, 10, 16, 38, 19,
		17, 21, 19, 2, -4, 8, 19, 17,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	
	int mg_double_bishop = 20;
	int eg_double_bishop = 65;
	
	int mg_rook_open_file = 30;
	int eg_rook_open_file = 9;
	
	int mg_rook_half_open_file = 8;
	int eg_rook_half_open_file = 14;

	int tempo_bonus = 19;

	int taper_start = 6377;
	int taper_end = 321;

	void evaluate_pawns(  Board &board, Color friendly);
	void evaluate_knights(Board &board, Color friendly);
	void evaluate_bishops(Board &board, Color friendly);
	void evaluate_rooks(  Board &board, Color friendly);
	void evaluate_queens( Board &board, Color friendly);
	void evaluate_kings(  Board &board, Color friendly);

	void note_king_attacks(Piece_type type, uint64_t attacks, Color friendly);

	void evaluate_mobility(Board &board, Piece_type type, uint64_t attacks, Color friendly);

	int evaluate(Board &board);
};
