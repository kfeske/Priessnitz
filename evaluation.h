#pragma once

#include "utility.h"
#include "board.h"

struct Evaluation : Noncopyable
{
	int mg_bonus[2];
	int eg_bonus[2];
	uint64_t ring[2];
	uint64_t zone[2];
	int ring_pressure[2];
	int zone_pressure[2];
	int ring_attackers[2];
	int zone_attackers[2];

	int mg_piece_value[6] = { 42, 297, 309, 400, 898, 0, };
	int eg_piece_value[6] = { 70, 301, 310, 551, 1003, 0, };
	
	int mg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		50, 51, 39, 53, 33, 32, -23, -16,
		7, 13, 20, 26, 26, 55, 56, 24,
		-5, -1, 9, 11, 27, 30, 11, 14,
		-8, -8, 8, 20, 19, 23, 9, 4,
		-12, -8, 1, 8, 16, 7, 10, 2,
		-3, -1, 7, 0, 12, 24, 22, -4,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int mg_knight_psqt[64] = {
		-82, -38, -20, -3, -13, -29, -35, -45,
		-13, 5, 25, 28, 25, 36, 9, 17,
		-14, 24, 37, 40, 44, 44, 23, -6,
		3, 2, 16, 43, 16, 35, 3, 23,
		-7, -3, 3, 13, 12, 12, 20, 8,
		-15, -17, -13, -11, 6, -11, 2, -13,
		-28, -17, -14, -2, -8, 3, 2, -7,
		-35, -16, -25, -13, -7, -8, -15, -22,
	};
	int mg_bishop_psqt[64] = {
		7, -39, -4, -53, -32, -55, -23, -22,
		-6, 1, -18, -17, -3, -7, -7, -28,
		-15, 4, 7, 6, 5, 20, 12, -6,
		-22, -3, -8, 24, 2, 4, -4, -23,
		-14, -23, -12, 12, 2, -10, -17, 8,
		-6, 0, -1, 0, 4, 0, -2, 10,
		13, 1, 11, -7, -1, 11, 23, 8,
		-3, 6, 1, -5, -2, -4, 10, 17,
	};
	int mg_rook_psqt[64] = {
		8, 17, 10, 4, 19, 7, 29, 38,
		4, 7, 20, 39, 9, 28, 24, 37,
		4, 25, 26, 27, 34, 34, 59, 29,
		-15, 15, 8, 11, 9, 5, 4, 5,
		-26, -19, -10, -10, -6, -29, -10, -22,
		-25, -19, -13, -14, -8, -10, 9, -15,
		-35, -16, -6, -5, -2, -3, 13, -29,
		-19, -19, -12, -6, -1, -10, -9, -16,
	};
	int mg_queen_psqt[64] = {
		-16, -17, -6, 9, 0, 13, 36, 10,
		-3, -20, -7, -26, -16, 6, 12, 51,
		2, -3, 1, -16, 5, 22, 30, 11,
		-9, -4, -17, -19, -8, -8, 5, 4,
		-1, -11, -15, -19, -16, -16, 1, 0,
		-6, -2, -8, -9, -8, -1, 5, 5,
		-2, -4, 10, 12, 9, 10, 10, 12,
		1, -8, -5, 8, 1, -9, -7, -6,
	};
	int mg_king_psqt[64] = {
		-19, 4, -2, -11, -3, -1, 7, -5,
		-22, 1, -10, 18, 25, 22, 32, 17,
		-33, 13, 1, 7, 15, 44, 45, 12,
		-6, 16, -17, -31, -20, -17, -7, -39,
		-42, -8, -24, -33, -45, -9, -35, -71,
		-22, 6, -13, -35, -21, -27, -6, -59,
		11, 6, 8, -12, -20, -12, 13, 3,
		10, 24, 19, -40, 11, -33, 17, 23,
	};
	int eg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		103, 95, 97, 80, 82, 81, 104, 112,
		59, 66, 58, 58, 46, 51, 69, 64,
		33, 26, 20, 12, 13, 15, 22, 19,
		23, 20, 15, 10, 11, 11, 9, 7,
		16, 12, 14, 21, 19, 17, 6, 3,
		20, 19, 20, 32, 29, 21, 9, 7,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_knight_psqt[64] = {
		-42, -36, -15, -8, 6, -23, -12, -57,
		-3, -1, -8, -2, -4, -3, -8, -6,
		6, -6, 3, 3, 2, -1, -11, -5,
		6, 8, 20, 20, 19, 17, 11, 7,
		12, 5, 20, 16, 24, 15, 6, 9,
		-10, -2, 1, 10, 14, -3, -7, -4,
		-5, 0, -8, -5, -4, -10, -12, 6,
		-16, -14, -10, -6, -8, -8, -1, -8,
	};
	int eg_bishop_psqt[64] = {
		3, 2, -5, -8, -12, -9, 1, -19,
		-8, -8, -8, 0, -14, -6, -4, -8,
		6, -1, 0, -4, -4, 1, -4, 6,
		-3, 0, 11, 15, 9, 8, 5, 1,
		-4, 6, 12, 4, 13, 5, 8, -20,
		6, 5, 5, 6, 11, 7, 3, -1,
		0, -8, -7, 1, 1, -2, -3, 0,
		-11, 6, 0, -4, -4, 6, -7, -13,
	};
	int eg_rook_psqt[64] = {
		15, 9, 23, 17, 14, 18, 14, 12,
		10, 15, 17, 9, 12, 10, 3, 7,
		11, 11, 8, 13, 3, -1, 4, 5,
		14, 7, 14, 9, 1, 1, 7, -2,
		4, 7, 11, 11, 5, 7, 6, 6,
		2, 5, -2, -1, -2, -12, -15, -13,
		-3, -7, -5, -6, -12, -15, -15, -12,
		-3, -3, 0, -1, -8, -7, -10, -14,
	};
	int eg_queen_psqt[64] = {
		1, -5, 15, 23, 18, 16, 8, 12,
		-2, -1, 17, 30, 44, 11, 6, 22,
		-1, 1, 19, 31, 29, 30, 9, 32,
		4, 1, 10, 27, 29, 38, 30, 19,
		-11, 3, 12, 33, 31, 29, 11, 23,
		-10, -7, -1, 8, 18, 2, -2, 6,
		-13, -24, -28, -21, -12, -26, -27, -36,
		-19, -21, -27, -27, -24, -23, -33, -12,
	};
	int eg_king_psqt[64] = {
		-54, -23, -14, -2, -3, 1, 20, -57,
		-10, 7, 12, 16, 22, 35, 31, 9,
		-2, 13, 26, 35, 46, 47, 44, 8,
		-10, 15, 25, 31, 35, 34, 28, -2,
		-19, 3, 19, 29, 32, 19, 10, -8,
		-24, -6, 7, 17, 17, 11, -4, -11,
		-20, -9, -1, 5, 10, 3, -8, -20,
		-63, -33, -24, -13, -24, -15, -31, -74,
	};
	
	int ring_attack_potency[6] = { 0, 39, 58, 41, 110, 0, };
	int zone_attack_potency[6] = { 0, -9, 11, 82, 55, 0, };
	
	int ring_pressure_weight[8] = { 0, 12, 26, 40, 49, 60, 2, 0, };
	int zone_pressure_weight[8] = { 0, -5, 0, 4, 7, 9, 9, 6, };
	int mg_pawn_shield[6] = { 0, 33, 38, 26, 28, 11, };
	
	int mg_knight_mobility[9] = { -68, -46, -27, -15, -5, -3, 8, 18, 31, };
	int eg_knight_mobility[9] = { -63, -48, -27, -7, -1, 11, 14, 16, 10, };
	
	int mg_bishop_mobility[14] = { -38, -47, -25, -19, -8, 0, 4, 10, 14, 18, 20, 38, 29, 27, };
	int eg_bishop_mobility[14] = { -51, -62, -40, -19, -7, -4, 7, 10, 14, 14, 17, 9, 11, 6, };
	
	int mg_rook_mobility[15] = { -10, -38, -28, -23, -18, -14, -10, -15, -10, -3, 4, 12, 21, 31, 26, };
	int eg_rook_mobility[15] = { -18, -32, -38, -27, -19, -7, -1, 4, 6, 10, 10, 16, 20, 21, 22, };
	
	int mg_queen_mobility[28] = { 0, 0, -2, -33, -47, -29, -21, -12, -9, -7, -4, -1, 2, 7, 5, 3, 5, 0, 6, 4, 2, 21, 37, 33, 26, 41, 22, 12, };
	int eg_queen_mobility[28] = { 0, 0, 0, -19, -46, -49, -49, -48, -35, -19, -18, -11, -5, -2, 3, 14, 16, 23, 30, 35, 43, 33, 37, 31, 44, 33, 22, 18, };
	
	int mg_king_mobility[9] = { 0, 10, -5, 12, -11, 22, -44, -25, 0, };
	int eg_king_mobility[9] = { 6, 49, 28, 5, 17, -13, 12, 7, -11, };
	
	int mg_isolated_penalty = -13;
	int eg_isolated_penalty = -12;
	
	int mg_doubled_penalty = -3;
	int eg_doubled_penalty = -10;
	
	int mg_backward_penalty = -13;
	int eg_backward_penalty = -13;
	
	int mg_chained_bonus = 10;
	int eg_chained_bonus = 7;
	
	int mg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		50, 51, 39, 53, 33, 32, -23, -16,
		36, 26, 28, 23, 23, 22, -5, -21,
		32, 17, 18, 16, 4, 21, -3, 1,
		5, 7, -12, -4, -15, -1, 9, 12,
		4, -2, -23, -13, -10, 11, 9, 32,
		0, 0, -8, 1, 1, 18, 21, 17,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		103, 95, 97, 80, 82, 81, 104, 112,
		114, 112, 82, 54, 63, 70, 87, 103,
		76, 71, 52, 40, 42, 49, 67, 72,
		44, 42, 31, 23, 25, 27, 45, 42,
		14, 22, 18, 8, 6, 8, 28, 14,
		8, 20, 12, -6, -2, 4, 11, 12,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	
	int mg_double_bishop = 18;
	int eg_double_bishop = 64;

	int tempo_bonus = 0;

	int taper_start = 6377;
	int taper_end = 321;

	void evaluate_pawn(Board &board, unsigned square, Color friendly);

	void evaluate_kings();

	void note_king_attacks(Piece_type type, uint64_t attacks, Color friendly);

	void evaluate_mobility(Board &board, Piece_type type, uint64_t attacks, Color friendly);

	void evaluate_piece(Board &board, Piece p, unsigned square);

	int evaluate(Board &board);
};
