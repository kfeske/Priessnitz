#pragma once

#include "utility.h"
#include "board.h"

struct Evaluation : Noncopyable
{
	int mg_bonus[2];
	int eg_bonus[2];
	uint64_t ring[2];
	uint64_t zone[2];
	int ring_pressure[2];
	int zone_pressure[2];
	int ring_attackers[2];
	int zone_attackers[2];

	int mg_piece_value[6] = { 47, 295, 307, 396, 897, 0, };
	int eg_piece_value[6] = { 70, 301, 310, 552, 1003, 0, };
	
	int mg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		47, 49, 36, 51, 30, 30, -24, -11,
		4, 8, 19, 23, 23, 57, 60, 27,
		-8, -6, 6, 7, 21, 25, 11, 13,
		-12, -12, 5, 15, 15, 18, 5, 3,
		-14, -11, -2, 4, 16, 11, 20, 6,
		-5, -4, 6, 6, 14, 40, 39, 11,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int mg_knight_psqt[64] = {
		-79, -40, -20, -3, -13, -29, -33, -43,
		-14, 4, 25, 27, 27, 37, 10, 18,
		-16, 24, 36, 40, 44, 46, 24, -2,
		1, 1, 14, 42, 15, 33, 2, 25,
		-8, -3, 3, 12, 12, 11, 18, 6,
		-16, -16, -13, -10, 6, -12, 1, -13,
		-29, -18, -15, -3, -8, 2, -2, -11,
		-40, -11, -24, -11, -5, -7, -11, -25,
	};
	int mg_bishop_psqt[64] = {
		7, -41, -5, -53, -35, -54, -27, -22,
		-8, 1, -18, -18, -4, -12, -7, -24,
		-14, 5, 7, 5, 4, 19, 13, -4,
		-21, -3, -8, 20, 2, 5, -4, -23,
		-15, -23, -13, 11, 2, -10, -16, 8,
		-5, -1, -2, -1, 3, 0, -3, 10,
		12, 0, 11, -8, -2, 11, 19, 7,
		-3, 9, 4, -4, -1, -3, 15, 13,
	};
	int mg_rook_psqt[64] = {
		9, 17, 10, 2, 18, 4, 27, 39,
		3, 5, 18, 37, 7, 22, 19, 36,
		4, 26, 27, 28, 35, 34, 60, 34,
		-14, 16, 8, 10, 11, 5, 5, 9,
		-25, -18, -9, -9, -5, -31, -10, -21,
		-24, -19, -13, -13, -7, -11, 9, -14,
		-34, -16, -6, -5, -1, -5, 7, -29,
		-19, -19, -12, -5, 0, -10, -8, -20,
	};
	int mg_queen_psqt[64] = {
		-14, -15, -6, 9, 0, 14, 34, 8,
		-4, -22, -8, -28, -18, 1, 6, 44,
		4, -3, 1, -18, 2, 22, 28, 13,
		-9, -4, -18, -21, -8, -9, 6, 4,
		0, -11, -17, -19, -16, -16, 0, -1,
		-6, -1, -8, -9, -8, -1, 4, 6,
		-2, -3, 10, 13, 9, 11, 11, 14,
		3, -8, -4, 9, 1, -8, -2, -6,
	};
	int mg_king_psqt[64] = {
		-20, 3, -3, -12, -5, -2, 6, -6,
		-24, -3, -14, 15, 23, 19, 30, 16,
		-38, 10, -4, 3, 11, 40, 41, 9,
		-11, 10, -22, -37, -27, -25, -14, -46,
		-47, -15, -33, -39, -50, -15, -42, -78,
		-25, 4, -18, -34, -22, -28, 1, -61,
		23, 21, 11, -17, -20, -9, 30, 11,
		21, 46, 20, -60, -9, -39, 21, 19,
	};
	int eg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		103, 95, 97, 80, 81, 81, 103, 111,
		58, 65, 58, 58, 46, 51, 70, 63,
		33, 26, 21, 13, 14, 16, 23, 20,
		22, 20, 15, 11, 13, 13, 11, 9,
		15, 12, 15, 21, 20, 18, 7, 5,
		19, 19, 21, 31, 29, 20, 10, 6,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_knight_psqt[64] = {
		-41, -36, -14, -7, 6, -22, -11, -56,
		-2, -1, -8, -1, -5, -3, -9, -7,
		7, -6, 3, 3, 1, -2, -12, -6,
		7, 9, 21, 20, 19, 18, 11, 7,
		13, 5, 20, 16, 24, 15, 6, 9,
		-10, -3, 2, 10, 14, -4, -7, -3,
		-4, 0, -7, -5, -4, -10, -11, 6,
		-17, -14, -10, -7, -8, -8, -2, -8,
	};
	int eg_bishop_psqt[64] = {
		3, 2, -4, -8, -12, -9, 1, -19,
		-8, -7, -8, 0, -14, -6, -4, -10,
		6, -1, 0, -4, -4, 1, -4, 5,
		-3, 0, 11, 15, 9, 8, 5, 1,
		-4, 6, 11, 4, 13, 5, 8, -20,
		6, 5, 5, 6, 11, 7, 2, -1,
		0, -8, -8, 2, 1, -2, -2, -1,
		-10, 5, 0, -4, -4, 5, -8, -11,
	};
	int eg_rook_psqt[64] = {
		15, 8, 23, 17, 14, 19, 13, 12,
		10, 15, 17, 8, 12, 11, 2, 6,
		11, 11, 7, 13, 3, -1, 3, 4,
		14, 7, 15, 10, 1, 1, 7, -3,
		4, 7, 11, 11, 5, 7, 6, 6,
		2, 5, -1, -1, -2, -12, -15, -13,
		-2, -6, -5, -7, -13, -14, -13, -10,
		-2, -2, 0, -1, -8, -6, -9, -12,
	};
	int eg_queen_psqt[64] = {
		1, -5, 15, 23, 18, 16, 7, 12,
		-1, -1, 17, 30, 44, 9, 4, 22,
		-1, 1, 20, 32, 29, 29, 7, 31,
		6, 2, 11, 27, 28, 37, 31, 18,
		-11, 3, 12, 33, 31, 28, 11, 24,
		-8, -8, 0, 9, 19, 2, -1, 4,
		-12, -25, -29, -20, -12, -27, -29, -36,
		-18, -20, -27, -27, -23, -23, -33, -10,
	};
	int eg_king_psqt[64] = {
		-56, -24, -15, -3, -5, 0, 19, -59,
		-11, 6, 10, 14, 20, 33, 29, 8,
		-3, 12, 25, 34, 45, 45, 42, 7,
		-11, 14, 24, 31, 34, 33, 27, -3,
		-19, 3, 19, 29, 32, 19, 11, -8,
		-23, -5, 7, 17, 17, 12, -4, -10,
		-19, -9, -2, 4, 10, 4, -7, -19,
		-62, -35, -24, -13, -22, -14, -29, -71,
	};
	
	int ring_attack_potency[6] = { 0, 41, 61, 46, 108, 0, };
	int zone_attack_potency[6] = { 0, -14, 10, 86, 50, 0, };

	int mg_pawn_shield[6] = { 0, 10, 20, 30, 40, 50 };
	
	int ring_pressure_weight[8] = { 0, 14, 27, 41, 48, 61, 2, 0, };
	int zone_pressure_weight[8] = { 0, -5, 0, 4, 7, 9, 8, 4, };
	
	int mg_knight_mobility[9] = { -71, -46, -25, -15, -5, -3, 7, 17, 31, };
	int eg_knight_mobility[9] = { -66, -47, -27, -7, -1, 11, 14, 16, 10, };
	
	int mg_bishop_mobility[14] = { -33, -48, -25, -19, -8, 0, 4, 9, 13, 17, 18, 37, 30, 26, };
	int eg_bishop_mobility[14] = { -51, -63, -40, -19, -7, -4, 7, 10, 14, 15, 17, 9, 11, 6, };
	
	int mg_rook_mobility[15] = { -10, -39, -34, -27, -22, -14, -11, -14, -10, -2, 7, 13, 23, 32, 27, };
	int eg_rook_mobility[15] = { -18, -33, -39, -27, -18, -7, -1, 5, 5, 9, 10, 16, 20, 21, 23, };
	
	int mg_queen_mobility[28] = { 0, 0, -2, -34, -49, -29, -21, -12, -9, -8, -4, -1, 3, 7, 5, 3, 5, 0, 5, 3, 2, 21, 37, 33, 27, 42, 23, 13, };
	int eg_queen_mobility[28] = { 0, 0, 0, -20, -47, -51, -50, -48, -35, -20, -19, -12, -5, -2, 4, 14, 15, 23, 30, 35, 43, 33, 38, 31, 45, 33, 24, 19, };
	
	int mg_king_mobility[9] = { 0, 8, -9, 7, -12, 19, -39, -18, 5, };
	int eg_king_mobility[9] = { 6, 51, 27, 5, 16, -13, 12, 7, -11, };
	
	int mg_isolated_penalty = -13;
	int eg_isolated_penalty = -12;
	
	int mg_doubled_penalty = -3;
	int eg_doubled_penalty = -11;
	
	int mg_backward_penalty = -13;
	int eg_backward_penalty = -13;
	
	int mg_chained_bonus = 10;
	int eg_chained_bonus = 7;
	
	int mg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		47, 49, 36, 51, 30, 30, -24, -11,
		37, 24, 25, 20, 21, 19, -10, -14,
		31, 16, 15, 15, 3, 21, -8, 2,
		4, 7, -14, -6, -16, 4, 10, 12,
		3, -3, -24, -13, -13, 13, 6, 35,
		-1, -1, -10, -1, -1, 16, 21, 13,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		103, 95, 97, 80, 81, 81, 103, 111,
		115, 113, 82, 54, 63, 70, 85, 103,
		76, 72, 53, 40, 42, 49, 66, 71,
		45, 43, 32, 23, 25, 25, 43, 41,
		15, 22, 18, 9, 7, 8, 27, 12,
		9, 20, 13, -6, -1, 3, 10, 11,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	
	int mg_double_bishop = 18;
	int eg_double_bishop = 63;

	int tempo_bonus = 0;

	int taper_start = 6377;
	int taper_end = 321;

	void evaluate_pawn(Board &board, unsigned square, Color friendly);

	void evaluate_kings();

	void note_king_attacks(Piece_type type, uint64_t attacks, Color friendly);

	void evaluate_mobility(Board &board, Piece_type type, uint64_t attacks, Color friendly);

	void evaluate_piece(Board &board, Piece p, unsigned square);

	int evaluate(Board &board);
};
