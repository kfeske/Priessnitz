#pragma once

#include "utility.h"
#include "board.h"

struct Evaluation : Noncopyable
{
	int mg_bonus[2];
	int eg_bonus[2];
	uint64_t ring[2];
	uint64_t zone[2];
	int ring_pressure[2];
	int zone_pressure[2];
	int ring_attackers[2];
	int zone_attackers[2];

	int mg_piece_value[6] = { 47, 306, 319, 416, 913, 0, };
	int eg_piece_value[6] = { 75, 325, 336, 598, 1109, 0, };
	
	int mg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		35, 43, 27, 47, 27, 25, -13, -29,
		5, 3, 21, 28, 29, 65, 59, 20,
		-9, -1, 9, 11, 31, 32, 13, 16,
		-9, -7, 11, 21, 23, 24, 10, 4,
		-15, -8, 3, 9, 17, 7, 12, 3,
		-5, -1, 7, 1, 12, 25, 25, -4,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int mg_knight_psqt[64] = {
		-97, -59, -46, -20, -5, -45, -49, -62,
		-9, 2, 24, 33, 8, 57, 0, 17,
		-4, 25, 31, 31, 57, 63, 33, 8,
		6, 6, 22, 46, 21, 39, 7, 28,
		-4, -1, 4, 12, 15, 13, 17, 5,
		-23, -14, -13, -12, 4, -11, 3, -10,
		-24, -20, -17, -2, -6, -1, -4, -5,
		-52, -14, -29, -16, -8, -8, -14, -29,
	};
	int mg_bishop_psqt[64] = {
		-21, -46, -47, -72, -62, -73, -27, -43,
		-18, -4, -17, -25, -6, -18, -29, -44,
		-9, 5, 4, 7, -2, 28, 6, -3,
		-18, 0, 1, 17, 6, -1, 0, -26,
		-3, -18, -9, 10, 5, -8, -16, 8,
		-3, 5, -1, 0, 2, 2, 3, 14,
		17, 3, 11, -8, 0, 13, 25, 14,
		2, 13, 3, -10, 2, -4, 14, 27,
	};
	int mg_rook_psqt[64] = {
		25, 13, 9, 0, 19, 25, 31, 53,
		9, 6, 20, 37, 21, 38, 39, 63,
		1, 25, 21, 24, 47, 37, 72, 44,
		-12, 3, 4, 5, 7, 7, 10, 10,
		-29, -28, -19, -13, -13, -31, -10, -23,
		-31, -22, -15, -17, -9, -15, 9, -13,
		-32, -21, -5, -6, -2, -5, 13, -24,
		-19, -18, -12, -7, -1, -9, -5, -13,
	};
	int mg_queen_psqt[64] = {
		-20, -18, -10, 8, -1, 13, 32, 7,
		2, -28, -26, -39, -37, -9, -5, 43,
		4, -5, -5, -12, -3, 20, 26, 19,
		-9, -4, -15, -22, -18, -15, -2, -4,
		0, -15, -13, -9, -15, -18, -4, 2,
		-3, 3, -6, -9, -4, -2, 10, 8,
		3, 3, 11, 11, 11, 14, 21, 20,
		2, -8, -3, 10, 4, -5, 1, 7,
	};
	int mg_king_psqt[64] = {
		-33, -2, 5, -23, -3, 9, 14, 3,
		-38, 13, 1, 44, 27, 34, 40, 6,
		-51, 39, 2, -3, 21, 65, 40, -8,
		-40, -17, -18, -56, -53, -23, -35, -88,
		-53, -20, -34, -70, -63, -34, -53, -116,
		-34, 16, -22, -39, -27, -36, -11, -65,
		20, 8, 7, -15, -20, -6, 18, 3,
		12, 31, 24, -46, 13, -33, 20, 27,
	};
	int eg_pawn_psqt[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		114, 105, 109, 84, 86, 93, 109, 118,
		55, 59, 53, 59, 52, 47, 71, 61,
		35, 27, 24, 14, 15, 17, 22, 18,
		21, 21, 17, 15, 14, 13, 11, 9,
		17, 13, 17, 23, 22, 17, 5, 4,
		20, 19, 22, 31, 35, 22, 8, 6,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_knight_psqt[64] = {
		-46, -25, -5, -11, -3, -28, -19, -51,
		-4, 0, -3, -1, -5, -17, -2, -14,
		-3, -2, 11, 13, 4, -4, -7, -8,
		7, 10, 21, 23, 23, 21, 15, 2,
		10, 5, 22, 22, 26, 16, 7, 9,
		-6, -1, 6, 18, 17, 1, -2, 1,
		-3, 0, -3, -1, -3, -6, -6, 12,
		2, -9, -9, -7, -4, -9, 0, 2,
	};
	int eg_bishop_psqt[64] = {
		2, 4, 1, 5, 1, -4, -2, -11,
		-6, -3, -1, -1, -9, -4, 1, -2,
		9, 0, 5, -4, -1, 5, 1, 9,
		4, 8, 5, 17, 10, 10, 3, 6,
		0, 9, 14, 13, 12, 8, 7, -10,
		1, 6, 9, 13, 16, 8, 1, -1,
		8, -6, -7, 3, 5, -3, 0, -5,
		-7, 6, -2, -2, -6, 9, -8, -21,
	};
	int eg_rook_psqt[64] = {
		13, 17, 25, 22, 17, 15, 15, 9,
		11, 21, 25, 17, 18, 11, 7, -1,
		12, 14, 15, 14, 5, 2, -1, -5,
		17, 15, 20, 17, 8, 3, 6, 0,
		13, 15, 14, 13, 11, 11, 4, 3,
		6, 4, 1, 4, 0, -5, -15, -13,
		-1, 0, -2, -2, -9, -11, -19, -11,
		-1, -2, 3, 0, -6, -5, -7, -11,
	};
	int eg_queen_psqt[64] = {
		-3, 7, 27, 25, 25, 23, 2, 10,
		-11, 9, 31, 50, 60, 37, 26, 30,
		-4, 3, 26, 39, 48, 41, 19, 29,
		5, 10, 19, 38, 47, 45, 46, 36,
		-4, 12, 14, 27, 34, 32, 27, 24,
		-19, -7, 5, 9, 14, 10, -2, -1,
		-20, -24, -27, -16, -13, -35, -47, -43,
		-27, -23, -24, -27, -26, -30, -30, -32,
	};
	int eg_king_psqt[64] = {
		-97, -38, -24, -2, -11, -3, 1, -85,
		-18, 20, 24, 26, 37, 45, 41, 5,
		-7, 28, 39, 45, 50, 50, 47, 5,
		-17, 23, 37, 47, 47, 43, 36, -2,
		-27, 11, 28, 42, 41, 28, 18, -11,
		-33, 0, 15, 27, 26, 17, 4, -19,
		-36, -6, 4, 12, 15, 8, -6, -30,
		-95, -48, -32, -21, -34, -21, -42, -101,
	};
	
	int ring_attack_potency[6] = { 0, 31, 64, 42, 109, 0, };
	int zone_attack_potency[6] = { 0, -8, 3, 87, 53, 0, };
	
	int ring_pressure_weight[8] = { 0, 12, 26, 40, 53, 51, 20, 0, };
	int zone_pressure_weight[8] = { 0, -5, 0, 5, 9, 10, 11, 5, };
	int mg_pawn_shield[6] = { 0, 32, 39, 27, 30, 12, };
	
	int mg_knight_mobility[9] = { -110, -46, -25, -14, -3, -1, 10, 20, 33, };
	int eg_knight_mobility[9] = { -82, -51, -20, -1, 9, 18, 20, 21, 18, };
	
	int mg_bishop_mobility[14] = { -55, -58, -27, -19, -6, 2, 8, 13, 16, 21, 24, 38, 36, 48, };
	int eg_bishop_mobility[14] = { -94, -72, -32, -10, -2, 4, 12, 16, 21, 21, 23, 16, 19, 9, };
	
	int mg_rook_mobility[15] = { -16, -57, -29, -22, -16, -14, -10, -15, -9, -3, 5, 13, 23, 36, 38, };
	int eg_rook_mobility[15] = { -24, -57, -39, -23, -17, -1, 5, 11, 10, 15, 18, 22, 26, 25, 26, };
	
	int mg_queen_mobility[28] = { 0, 0, -15, -66, -57, -24, -13, -9, -7, -6, -3, 0, 2, 5, 5, 4, 4, 0, 0, 0, 5, 15, 31, 36, 39, 60, 32, 20, };
	int eg_queen_mobility[28] = { 0, 0, -6, -61, -65, -62, -65, -53, -37, -15, -8, -1, 7, 9, 13, 22, 26, 35, 40, 44, 49, 41, 42, 39, 46, 48, 37, 29, };
	
	int mg_king_mobility[9] = { 0, 13, -9, 11, -7, 22, -42, -22, -5, };
	int eg_king_mobility[9] = { 7, 116, 55, 23, 19, -11, 4, -2, -19, };
	
	int mg_isolated_penalty = -14;
	int eg_isolated_penalty = -13;
	
	int mg_doubled_penalty = -4;
	int eg_doubled_penalty = -12;
	
	int mg_backward_penalty = -12;
	int eg_backward_penalty = -16;
	
	int mg_chained_bonus = 10;
	int eg_chained_bonus = 9;
	
	int mg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		35, 43, 27, 47, 27, 25, -13, -29,
		36, 41, 30, 19, 15, 13, -16, -43,
		30, 20, 21, 19, 5, 8, -4, -5,
		10, 3, -20, -8, -16, -11, -8, 0,
		7, -9, -21, -17, -14, -10, -7, 20,
		1, -1, -12, -7, 8, 2, 16, 14,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	int eg_passed_bonus[64] = {
		0, 0, 0, 0, 0, 0, 0, 0,
		114, 105, 109, 84, 86, 93, 109, 118,
		134, 130, 97, 59, 67, 87, 98, 122,
		83, 81, 57, 47, 45, 55, 78, 83,
		52, 47, 36, 26, 29, 36, 54, 50,
		16, 24, 18, 9, 10, 16, 37, 18,
		15, 20, 17, 1, -5, 7, 19, 16,
		0, 0, 0, 0, 0, 0, 0, 0,
	};
	
	int mg_double_bishop = 19;
	int eg_double_bishop = 65;

	int tempo_bonus = 19;

	int taper_start = 6377;
	int taper_end = 321;

	void evaluate_pawn(Board &board, unsigned square, Color friendly);

	void evaluate_kings();

	void note_king_attacks(Piece_type type, uint64_t attacks, Color friendly);

	void evaluate_mobility(Board &board, Piece_type type, uint64_t attacks, Color friendly);

	void evaluate_piece(Board &board, Piece p, unsigned square);

	int evaluate(Board &board);
};
